<?xml version="1.0" encoding="UTF-8"?>
<project name="SF-PACKAGE-CONFIG" xmlns:hlm="http://www.nokia.com/helium">
  <!-- location of this config -->
  <dirname property="sf.package.config.dir" file="${ant.file.SF-PACKAGE-CONFIG}"/>
  
  <!-- import package properties -->
  <import file="${sf.package.config.dir}/package_props.ant.xml" />
  
  <!-- import common properties/targets/references -->
  <import file="../common/build.xml" />
  
  <!-- import package references -->
  <import file="${sf.package.config.dir}/package_refs.ant.xml" />
  
  <target name="sf-compile">
    <runtarget target="sf-package-compile"/>
  </target>
  
  <target name="sf-package-compile">
    
    <hlm:sbsMakeOptions engine="gmake" id="sbs.fullbuild.options"/>
    <hlm:sbsMakeOptions engine="gmake" id="sbs.toolsbuild.options"/>
    
    <!-- CLEAN -->
    <hlm:argSet id="sbs.main.clean.sbs.var">
      <hlm:arg name="config" value="${sf.spec.sbs.config}" />
      <hlm:arg name="enable-filter" value="${sf.spec.logs.raptorfilter.enable}" />
      <hlm:arg name="command" value="CLEAN" />
    </hlm:argSet>
    <antcall target="compile-main" inheritAll="false" inheritRefs="true">
      <param name="build.system" value="${sf.spec.build.system}" />
      <!-- param name="compile.sysdef.dtd.stub" value="${sf.spec.os.sysdef.dtd}" / -->
      <param name="sysdef.configurations.list" value="${sf.spec.sysdef.configurations.list}" />
      <!-- param name="sf.spec.sysdef.version" value ="${sf.spec.os.sysdef.version}"/ -->
      <reference refid="sbs.main.clean.sbs.var" torefid="sbs.var" />
      <reference refid="sbs.fullbuild.options" torefid="sbs.make.options" />
      <reference refid="sf.spec.system.definition.files" torefid="system.definition.files" />
    </antcall>
    
    <!-- BUILD tools2 -->
    <hlm:argSet id="sbs.tools2.var">
      <hlm:arg name="config" value="tools2_rel" />
      <hlm:arg name="singlejob" value="false" />
      <hlm:arg name="enable-filter" value="${sf.spec.logs.raptorfilter.enable}" />
    </hlm:argSet>
    <antcall target="compile-main" inheritAll="false" inheritRefs="true">
      <param name="build.system" value="${sf.spec.build.system}" />
      <!-- param name="compile.sysdef.dtd.stub" value="${sf.spec.os.sysdef.dtd}" / -->
      <param name="sysdef.configurations.list" value="${sf.spec.sysdef.configurations.list}" />
      <!-- param name="sf.spec.sysdef.version" value ="${sf.spec.os.sysdef.version}"/ -->
      <reference refid="sbs.tools2.var" torefid="sbs.var" />
      <reference refid="sbs.toolsbuild.options" torefid="sbs.make.options" />
      <reference refid="sf.spec.system.definition.files" torefid="system.definition.files" />
    </antcall>
    
    <!-- BUILD tools -->
    <hlm:argSet id="sbs.tools.var">
      <hlm:arg name="config" value="tools_rel" />
      <hlm:arg name="singlejob" value="true" />
      <hlm:arg name="enable-filter" value="${sf.spec.logs.raptorfilter.enable}" />
    </hlm:argSet>
    <antcall target="compile-main" inheritAll="false" inheritRefs="true">
      <param name="build.system" value="${sf.spec.build.system}" />
      <!-- param name="compile.sysdef.dtd.stub" value="${sf.spec.os.sysdef.dtd}" / -->
      <param name="sysdef.configurations.list" value="${sf.spec.sysdef.configurations.list}" />
      <!-- param name="sf.spec.sysdef.version" value ="${sf.spec.os.sysdef.version}"/ -->
      <reference refid="sbs.tools.var" torefid="sbs.var" />
      <reference refid="sbs.toolsbuild.options" torefid="sbs.make.options" />
      <reference refid="sf.spec.system.definition.files" torefid="system.definition.files" />
    </antcall>
    
    <!-- BUILD -->
    <hlm:argSet id="sbs.main.sbs.var">
      <hlm:arg name="config" value="${sf.spec.sbs.config}.whatlog" />
      <hlm:arg name="enable-filter" value="${sf.spec.logs.raptorfilter.enable}" />
    </hlm:argSet>
    <antcall target="compile-main" inheritAll="false" inheritRefs="true">
      <param name="build.system" value="${sf.spec.build.system}" />
      <!-- param name="compile.sysdef.dtd.stub" value="${sf.spec.os.sysdef.dtd}" / -->
      <param name="sysdef.configurations.list" value="${sf.spec.sysdef.configurations.list}" />
      <!-- param name="sf.spec.sysdef.version" value ="${sf.spec.os.sysdef.version}"/ -->
      <reference refid="sbs.main.sbs.var" torefid="sbs.var" />
      <reference refid="sbs.fullbuild.options" torefid="sbs.make.options" />
      <reference refid="sf.spec.system.definition.files" torefid="system.definition.files" />
    </antcall>
    
    <!-- CHECK -->
    <exec executable="sbs" dir="M:\" output="M:\output\logs\build_check_sbs_ant_output.log">
      <arg value="-s M:\output\build\canonical_system_definition_SF.xml"/>
      <arg value="-k"/>
      <arg value="-c ${sf.spec.sbs.config}"/>
      <arg value="-j 32"/>
      <arg value="--check"/>
      <arg value="-m M:\output\logs\build_check_Makefile"/>
      <arg value="-f M:\output\logs\build_check_compile.log"/>
    </exec>
    
  </target>
  
</project>

